#- name: include stuff that ought to be somewhere else
#  include: packages.yml

- name: Install packages for cmdsrv
  package: name={{ item }}
           state=present
  with_items:
#    - libzmq3-dev
    - pkg-config
    - sqlite3
    - libapache2-mod-wsgi
  tags:
    - download
  when: is_debuntu

- name: Install ubuntu connector apache to php
  package: name=libapache2-mod-php
           state=present
  tags:
    - download
  when: is_ubuntu

- name: Install packages for cmdsrv
  package: name={{ item }}
           state=present
  with_items:
    - zeromq3-devel
    - cracklib-python
    - mod_wsgi
    - systemd-python
  tags:
    - download
  when: is_redhat

- name: Install packages for fedora 23+
  package: name=redhat-rpm-config
           state=installed
  when: ansible_distribution == "Fedora" and ansible_distribution_version >= "22"
#        - zeromq3

#	pip install pyzmq  - didn't use the installed zmq rpm and the target zmq 4, not 3, for which there is no rpm.


#- name: Set the pear download_dir
#  shell: "pear config-set download_dir {{ iiab_base }}"
#  tags:
#    - download2

- name: Create cmdsrv directory
  file: path={{ item }}
        mode=0700
        owner=root
        group=root
        state=directory
  with_items:
    - "{{ cmdsrv_dir }}"
    - "{{ cmdsrv_dir }}/scripts"
    - "{{ admin_install_base }}/venv"

#  Might need to tinker python2 packages that were once suppiled by apt
- name: 'Add to Python 2.7 virtual environment for iiab related python2.7 apps'
  pip:
    requirements: "{{ iiab_base }}/iiab-admin-console/python2.deps"
    virtualenv: /opt/admin/venv
    virtualenv_site_packages: no
    virtualenv_command: /usr/bin/virtualenv
    virtualenv_python: python2.7
    extra_args: "--no-cache-dir"
#       extra_args="--disable-pip-version-check"

- name: Install Command Server Executable
  copy: src=iiab-cmdsrv
        dest="{{ cmdsrv_dir }}/iiab-cmdsrv"
        mode=0700
        owner=root
        group=root

# remove after testing
#- name: create an empty database
#  file: path={{ cmdsrv_dir }}/{{ iiab_cmdsrv_dbname }}
#        state=touch

- name: Set permissions on sqlite db
  file: dest="{{ cmdsrv_dir }}/{{cmdsrv_dbname }}"
        mode=0600
        owner=root
        group=root
        state=touch

- name: Copy scripts
  copy: src={{ item }}
            dest="{{ cmdsrv_dir }}/scripts"
            mode=0755
            owner=root
            group=root
  with_fileglob:
            - scripts/*

- name: Copy templated scripts
  template: src={{ item }}
            dest="{{ cmdsrv_dir }}/scripts"
            mode=0755
            owner=root
            group=root
  with_items:
            - scripts/get_kiwix_catalog
            - scripts/get_oer2go_catalog
            - scripts/constants.sh
            - scripts/iiab_update_menus.py
            - scripts/install_menu_defs.py
            - scripts/sync_menu_defs.py

- name: Allow running iiab_update_menus from the command line
  file: src="{{ cmdsrv_dir }}/scripts/iiab_update_menus.py"
        dest="/usr/bin/iiab-update-menus"
        state=link

# The following allows update_menus to import a function from make_kiwix-lib
- name: Create a link python can use to import iiab-make-kiwix-lib functions
  file: src="/usr/bin/iiab-make-kiwix-lib.py"
        dest="{{ cmdsrv_dir }}/scripts/iiab_make_kiwix_lib.py"
        state=link

- name: Copy templated utilies
  template: src={{ item }}
            dest="/usr/bin/"
            mode=0755
            owner=root
            group=root
  with_items:
            - utilities/iiab-get-kiwix-cat
            - utilities/iiab-get-oer2go-cat
            - utilities/iiab-install-oer2go-mod
            - utilities/iiab-sync-menu-defs

- name: Copy default kiwix_catalog.json
  copy: src="json/kiwix_catalog.json"
        dest="/etc/iiab/kiwix_catalog.json"
        mode=0644
        force=no
        owner=root
        group=root

- name: Create fresh kiwix_catalog.json
  shell: "iiab-get-kiwix-cat -v"
  register: kiwix_cat

- debug: var=kiwix_cat.stdout_lines

- name: Copy default oer2go_catalog.json
  copy: src="json/oer2go_catalog.json"
        dest="/etc/iiab/oer2go_catalog.json"
        mode=0644
        force=no
        owner=root
        group=root

- name: Create fresh oer2go_catalog.json
  shell: "iiab-get-oer2go-cat"
  register: oer2go_cat

- name: Create symlink from /common/assets to kiwix_catalog.json
  file: src=/etc/iiab/kiwix_catalog.json
        dest={{ doc_root }}/common/assets/kiwix_catalog.json
        owner=root
        group=root
        state=link

- name: Create symlink from /common/assets to oer2go_catalog.json
  file: src=/etc/iiab/oer2go_catalog.json
        dest={{ doc_root }}/common/assets/oer2go_catalog.json
        owner=root
        group=root
        state=link

- name: Create cmdsrv.conf file
  template: backup=yes
            src=cmdsrv.conf.j2
            dest="{{ cmdsrv_dir }}/cmdsrv.conf"
            owner=root
            group=root
            mode=0644

# remove after testing
#- name: Create a folder for iiab-cmdsrv executable not on path
#  file: path=/usr/lib/iiab
#        state=directory

# Create iiab-cmdsrv service

- name: Create iiab-cmdsrv service
  template: backup=yes
            src={{ item.src }}
            dest={{ item.dest }}
            owner=root
            group=root
            mode={{ item.mode }}
  with_items:
    - { src: 'iiab-cmdsrv.service.j2', dest: '/etc/systemd/system/iiab-cmdsrv.service', mode: '0644'}
    - { src: 'iiab-cmdsrv-ctl.j2', dest: '/usr/bin/iiab-cmdsrv-ctl', mode: '0755'}

#- name: Enable the ubuntu php config file
#  command: phpenmod 20-zmq
#  when: is_ubuntu

- name: Create symlink to iiab ansible.cfg
  file: path="{{ cmdsrv_dir }}/ansible.cfg"
        src="{{ iiab_repo }}/ansible.cfg"
        state=link

- name: Ask systemd to reread the unit files, picks up changes done
  shell: systemctl daemon-reload

- name: Enable iiab-cmdsrv service
  service: name=iiab-cmdsrv
           enabled=yes
           state=restarted

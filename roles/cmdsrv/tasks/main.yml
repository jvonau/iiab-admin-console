- name: include stuff that ought to be somewhere else
  include: packages.yml

- name: Install packages for cmdsrv
  package: name={{ item }}
           state=present
  with_items:
    - libzmq3-dev
    - python-cracklib
    - pkg-config
    - sqlite3
  tags:
    - download
  when: is_debuntu

- name: install ubuntu connector apache to php
  package: name=libapache2-mod-php
           state=present
  tags:
    - download
  when: is_ubuntu

- name: Install packages for cmdsrv
  package: name={{ item }}
           state=present
  with_items:
    - zeromq3-devel
    - cracklib-python
  tags:
    - download
  when: is_redhat

- name: check the config_vars.yml file
  stat: path=/etc/iiab/config_vars.yml
  register: config_vars

- name: Ensure config_vars.yml is not empty
  shell: "cat /etc/iiab/config_vars.yml"
  register: config_vars_check
  when: config_vars.stat.exists == true

- name: Install default config_vars.yml
  template: src=config_vars.yml
            dest=/etc/iiab/config_vars.yml
            mode=0644
  when: config_vars.stat.exists == false or config_vars_check.stdout == ""

# remove after testing
#- name: put a python interface to iiab.env
#  template: src=iiab_env.py
#            dest=/etc/iiab

- name: Install packages for fedora 23+
  package: name=redhat-rpm-config
           state=installed
  when: ansible_distribution == "Fedora" and ansible_distribution_version >= "22"
#        - zeromq3

#	pip install pyzmq  - didn't use the installed zmq rpm and the target zmq 4, not 3, for which there is no rpm.

- name: Download zeromq and python binding
  pip: name=pyzmq
       extra_args="--download {{ pip_packages_dir }}"
  when: not {{ use_cache }} and not {{ no_network }}
  tags:
    - download2

- name: Install zeromq and python binding
  pip: name=pyzmq
       extra_args="--no-index --find-links=file://{{ pip_packages_dir }}"

- name: Set the pear download_dir
  shell: "pear config-set download_dir {{ iiab_base }}"
  tags:
    - download2

# Next two should not be needed now

#- name: Download php binding for zeromq
#  shell: yes '' | pecl download zmq-beta
#  when: not {{ use_cache }} and not {{ no_network }}
#  tags:
#    - download2

#- name: Install php binding for zeromq
#  shell: pecl install -f zmq*tgz
#  args:
#    creates: "{{ phplib_dir }}/modules/zmq.so"

- name: Download speedtest-cli
  pip: name=speedtest-cli
       extra_args="--download {{ pip_packages_dir }}"
  when: not {{ use_cache }} and not {{ no_network }}
  tags:
    - download2

- name: Install speedtest-cli
  pip: name=speedtest-cli
       extra_args="--no-index --find-links=file://{{ pip_packages_dir }}"

- name: Create cmdsrv directory
  file: path={{ item }}
        mode=0700
        owner=root
        group=root
        state=directory
  with_items:
    - "{{ cmdsrv_dir }}"
    - "{{ cmdsrv_dir }}/scripts"

- name: Install Command Server Executable
  copy: src=iiab-cmdsrv
        dest="{{ cmdsrv_dir }}/iiab-cmdsrv"
        mode=0700
        owner=root
        group=root

# remove after testing
#- name: create an empty database
#  file: path={{ cmdsrv_dir }}/{{ iiab_cmdsrv_dbname }}
#        state=touch

- name: Set permissions on sqlite db
  file: dest="{{ cmdsrv_dir }}/{{cmdsrv_dbname }}"
        mode=0600
        owner=root
        group=root
        state=touch

- name: Copy scripts
  copy: src={{ item }}
            dest="{{ cmdsrv_dir }}/scripts"
            mode=0755
            owner=root
            group=root
  with_fileglob:
            - scripts/*

- name: Copy templated scripts
  template: src={{ item }}
            dest="{{ cmdsrv_dir }}/scripts"
            mode=0755
            owner=root
            group=root
  with_items:
            - scripts/get_kiwix_catalog

- name: Copy json files
  copy: src={{ item }}
        dest="/etc/iiab"
        mode=0644
        owner=root
        group=root
  with_fileglob:
        - json/*

- name: Create symlink from /common/assets to kiwix_catalog.json
  file: src=/etc/iiab/kiwix_catalog.json
        dest={{ doc_root }}/common/assets/kiwix_catalog.json
        owner=root
        group=root
        state=link

- name: Create cmdsrv.conf file
  template: backup=yes
            src=cmdsrv.conf.j2
            dest="{{ cmdsrv_dir }}/cmdsrv.conf"
            owner=root
            group=root
            mode=0644

# remove after testing
#- name: Create a folder for iiab-cmdsrv executable not on path
#  file: path=/usr/lib/iiab
#        state=directory

# Create iiab-cmdsrv service

- name: Create iiab-cmdsrv service
  template: backup=yes
            src={{ item.src }}
            dest={{ item.dest }}
            owner=root
            group=root
            mode={{ item.mode }}
  with_items:
    - { src: 'iiab-cmdsrv.service.j2', dest: '/etc/systemd/system/iiab-cmdsrv.service', mode: '0655'}
    - { src: 'iiab-cmdsrv-ctl.j2', dest: '/usr/bin/iiab-cmdsrv-ctl', mode: '0755'}

- name: Create iiab-cmdsrv service
  template: backup=yes
            src={{ item.src }}
            dest={{ item.dest }}
            mode={{ item.mode }}
  with_items:
    - { src: 'iiab-cmdsrv-init.j2', dest: '/etc/init.d/iiab-cmdsrv-init', mode: '0755'}
#    - { src: 'zmq.ini', dest: '/etc/php5/apache2/conf.d/20-zmq.ini', mode: '0755'}
  when: is_debian

- name: Create iiab-cmdsrv service
  template: backup=yes
            src={{ item.src }}
            dest={{ item.dest }}
            mode={{ item.mode }}
  with_items:
    - { src: 'iiab-cmdsrv-init.j2', dest: '/etc/init.d/iiab-cmdsrv-init', mode: '0755'}
#    - { src: 'zmq.ini', dest: '/etc/php/7.0/mods-available/20-zmq.ini', mode: '0755'}
  when: is_ubuntu

#- name: Enable the ubuntu php config file
#  command: phpenmod 20-zmq
#  when: is_ubuntu

- name: Create iiab-cmdsrv service
  template: backup=yes
            src={{ item.src }}
            dest={{ item.dest }}
            mode={{ item.mode }}
  with_items:
    - { src: 'iiab-cmdsrv-init.j2', dest: '/usr/libexec/iiab-cmdsrv-init', mode: '0755'}
#    - { src: 'zmq.ini', dest: '/etc/php.d/20-zmq.ini', mode: '0755'}
  when: is_redhat

- name: Create symlink to iiab ansible.cfg
  file: path="{{ cmdsrv_dir }}/ansible.cfg"
        src="{{ iiab_repo }}/ansible.cfg"
        state=link

- name: ask systemd to reread the unit files, picks up changes done
  shell: systemctl daemon-reload

- name: Enable iiab-cmdsrv service
  service: name=iiab-cmdsrv
           enabled=yes
           state=started


